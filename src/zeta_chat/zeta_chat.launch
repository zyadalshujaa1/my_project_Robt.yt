<launch>

    <!-- Start the speech recognition node -->
    <node name="speech_recognition_node" pkg="zeta_chat" type="speech_recognition_node.py" output="screen">
        <!-- Add any node-specific parameters here, if needed -->
    </node>

    <!-- Start the classification node -->
    <node name="classification_node" pkg="zeta_chat" type="classification_node.py" output="screen">
        <!-- Add any node-specific parameters here, if needed -->
    </node>

    <!-- Start the GPT node -->
    <node name="gpt_node" pkg="zeta_chat" type="gpt_node.py" output="screen">
        <!-- Add any node-specific parameters here, if needed -->
    </node>

    <!-- Start the voice node -->
    <node name="voice_node" pkg="zeta_chat" type="voice_node.py" output="screen">
        <!-- Add any node-specific parameters here, if needed -->
    </node>

    <!-- Define any services here -->
    <!-- For example, for the classify_input service provided by the classification_node -->
    <service name="classify_input" type="zeta_chat/ClassifyInput"/>

    <!-- For example, for the synthesize_speech service provided by the voice_node -->
    <service name="synthesize_speech" type="voice_chat/SynthesizeSpeech"/>

    <!-- Define any topics here -->
    <!-- For example, for the user_input topic used by the speech_recognition_node -->
    <topic name="user_input" type="std_msgs/String"/>

    <!-- For example, for the gpt_response topic used by the classification_node -->
    <topic name="gpt_response" type="std_msgs/String"/>

    <!-- For example, for the action_status topic used by the classification_node -->
    <topic name="action_status" type="std_msgs/String"/>

    <!-- For example, for the user_input_gpt topic used by the gpt_node -->
    <topic name="user_input_gpt" type="std_msgs/String"/>

    <!-- For example, for the end_of_voice topic used by the voice_node -->
    <topic name="end_of_voice" type="std_msgs/String"/>

</launch>
